<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="account_huang.dao.RecordDao">
	 <resultMap id="recordResult" type="account_huang.entity.Record">
		<result property="id" column="id" />
		<result property="times" column="timestr" />
		<result property="incomeTotal" column="INCOME_TOTAL" />
		<result property="profit" column="profit" />
		<result property="costDaily" column="COST_DAILY" />
		<result property="eating" column="eating" />
		<result property="supermarket" column="supermarket" />
		<result property="party" column="party" />
		<result property="rent" column="rent" />
		<result property="book" column="book" />
		<result property="clothes" column="clothes" />
		<result property="traffic" column="TRAFFICEXP" />
		<result property="elseCost" column="elseCost" />
		<result property="remark" column="remark" />
		<result property="holderName" column="holderName" />	
		<result property="profitThisMonth" column="profitThisMonth" />
		<result property="costThisMonth" column="costThisMonth" />
	</resultMap>
	
    <select id="getRecordByDate" 
        parameterType="java.util.HashMap" resultMap="recordResult">
        select ID, to_char(times,'yyyy-mm-dd') timestr, income_total, profit, cost_daily, eating, supermarket, 
       			 party, rent, trafficexp, elsecost, remark, clothes, book, holdername
       			 from expense a where holdername=#{holdername}  
        	and times BETWEEN to_date(#{qssj},'yyyy-mm-dd') AND to_date(#{jssj},'yyyy-mm-dd') 
       		order by times DESC
    </select>
    <!-- 根据日期查询这段时间的 总的结余和总的开销 -->
    <select id="getTotalByDate"  parameterType="java.util.HashMap" resultMap="recordResult">
      SELECT SUM(PROFIT) AS PROFITTHISMONTH, SUM(COST_DAILY) AS COSTTHISMONTH
   			FROM EXPENSE  WHERE HOLDERNAME = #{holdername}
    				AND TIMES BETWEEN TO_DATE(#{qssj}, 'yyyy-mm-dd') AND
        							  TO_DATE(#{jssj}, 'yyyy-mm-dd')

    </select>
    
    <delete id="deleteById" parameterType="java.lang.String">
        delete from expense where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
    </delete>
    
    <select id="findById" parameterType="java.lang.String" resultMap="recordResult">
        select ID, to_char(times,'yyyy-mm-dd') timestr, income_total, profit, cost_daily, eating, supermarket, 
       			 party, rent,trafficexp, elsecost, remark, clothes, book, holdername from expense where id=#{id}
    </select>
    
   
	<insert id="save" parameterType="account_huang.entity.Record"> 
	 <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="id" > 
              select SEQ_EXPENSE_ID.nextval from dual 
       </selectKey>    
	    INSERT INTO expense
	    <trim prefix="(" suffix=")" suffixOverrides="," >
       				 ID,times,HOLDERNAME,
		    <if test="incomeTotal != 0" >INCOME_TOTAL,</if>
		    PROFIT,COST_DAILY,
		    <if test="eating !=0" >EATING,</if>
		    <if test="supermarket != 0" >SUPERMARKET,</if>
		    <if test="party != 0" >PARTY,</if>
		    <if test="rent != 0" >RENT,</if>
		    <if test="traffic != 0" >TRAFFICEXP,</if>
		    <if test="elseCost != 0" >ELSECOST,</if>
		    <if test="remark != null" >REMARK,</if>
		    <if test="clothes != 0" >CLOTHES,</if>
		    <if test="book != 0" >BOOK</if>
	  </trim>
	  <trim prefix="values (" suffix=")" suffixOverrides="," >
     			 #{id,jdbcType=DECIMAL},
	    				to_date(#{times},'yyyy-mm-dd'),#{holderName},
     		<if test="incomeTotal != 0" >#{incomeTotal},</if>
		  	#{incomeTotal}-(#{eating}+#{supermarket}+#{party}+ #{rent}+ #{traffic}+#{elseCost}+ #{clothes}+#{book}), 
		  	#{eating}+#{supermarket}+#{party}+ #{rent}+ #{traffic}+#{elseCost}+ #{clothes}+#{book},
		    <if test="eating != 0" >     #{eating},</if>
		    <if test="supermarket != 0" >#{supermarket},</if>
		    <if test="party != 0" >      #{party},</if>
		    <if test="rent != 0" >       #{rent},</if>
		    <if test="traffic != 0" >    #{traffic},</if>
		    <if test="elseCost != 0" >   #{elseCost},</if>
		    <if test="remark != null" >     #{remark},</if>
		    <if test="clothes != 0" >    #{clothes},</if>
		    <if test="book != 0" >       #{book}</if>
     </trim> 
	</insert>
	

	<!-- 通过反射处理，空值为0处理 -->
	<update id="update" parameterType="account_huang.entity.Record">
   		 update expense set times=to_date(#{times},'yyyy-mm-dd')
			 <if test="incomeTotal !=0">,INCOME_TOTAL=#{incomeTotal} </if> 
	   		,PROFIT=#{incomeTotal}-(#{eating}+#{supermarket}+#{party}+ #{rent}+ #{traffic}+#{elseCost}+ #{clothes}+#{book})
	   		,COST_DAILY=#{eating}+#{supermarket}+#{party}+ #{rent}+ #{traffic}+#{elseCost}+ #{clothes}+#{book}
			 
			 <if test="eating !=0 ">,EATING=#{eating}</if> 
			 <if test="eating ==0 ">,EATING=NULL</if> 
			  
			  <if test="supermarket ==0 ">,SUPERMARKET=NULL</if> 
			 <if test="supermarket !=0 ">,SUPERMARKET=#{supermarket}</if> 
			 
			  <if test="party ==0 ">,PARTY=NULL</if>
			  <if test="party !=0 ">,PARTY=#{party}</if>
			 
			  
			 <if test="rent !=0 ">,RENT=#{rent}</if> 
			  <if test="rent ==0 ">,RENT=NULL</if> 
			 
			 
			 <if test="traffic !=0 ">,TRAFFICEXP=#{traffic}</if> 
			  <if test="traffic ==0 ">,TRAFFICEXP=NULL</if> 
			 
			 <if test="elseCost !=0 ">,ELSECOST=#{elseCost}</if> 
			  <if test="elseCost ==0 ">,ELSECOST=NULL</if> 
			 
			 <if test="remark !=null ">,REMARK=#{remark}</if> 
			 
			 <if test="clothes ==0 ">,CLOTHES=NULL</if> 
			 <if test="clothes !=0 ">,CLOTHES=#{clothes}</if> 
			
			 <if test="book ==0 ">,BOOK=NULL</if>
			 <if test="book !=0 ">,BOOK=#{book}</if>
   		  where id=#{id}
	</update>
	
	
	<!-- <update id="updateTotal" parameterType="String">
   		 update expense set cost_Daily=nvl(eating,0)+nvl(supermarket,0)+nvl(party,0)+nvl(rent,0)+nvl(clothes,0)+nvl(book,0)+nvl(trafficexp,0)+nvl(elseCost,0),
                			profit=income_total-(nvl(eating,0)+nvl(supermarket,0)+nvl(party,0)+nvl(rent,0)+nvl(clothes,0)+nvl(book,0)+nvl(trafficexp,0)+nvl(elseCost,0))
                where times=to_date(#{times},'yyyy-mm-dd')
	</update> -->
    
    	<!-- <update id="update" parameterType="account_huang.entity.Record">
   		 update expense set times=to_date(#{times},'yyyy-mm-dd')
			 <if test="incomeTotal !=null ">,INCOME_TOTAL=#{incomeTotal} </if> 
	   		 <if test="profit !=null ">,PROFIT=#{profit}</if> 
			 <if test="costDaily !=null ">,COST_DAILY=#{costDaily}</if> 
			 <if test="eating !=null ">,EATING=#{eating}</if> 
			 <if test="supermarket !=null ">,SUPERMARKET=#{supermarket}</if> 
			 <if test="party !=null ">,PARTY=#{party}</if> 
			 <if test="rent !=null ">,RENT=#{rent}</if> 
			 <if test="traffic !=null ">,TRAFFICEXP=#{traffic}</if> 
			 <if test="elseCost !=null ">,ELSECOST=#{elseCost}</if> 
			 <if test="remark !=null ">,REMARK=#{remark}</if> 
			 <if test="clothes !=null ">,CLOTHES=#{clothes}</if> 
			 <if test="book !=null ">,BOOK=#{book}</if>
   		  where id=#{id}
	</update> -->
      
    <!--  
	<insert id="save" parameterType="account_huang.entity.Record"> 
	 <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="id" > 
              select SEQ_EXPENSE_ID.nextval from dual 
       </selectKey>    
	    INSERT INTO expense
	    <trim prefix="(" suffix=")" suffixOverrides="," >
       				 ID,times,HOLDERNAME,
		    <if test="incomeTotal != null" >INCOME_TOTAL,</if>
		    <if test="profit != null" >PROFIT,</if>
		    <if test="costDaily != null" >COST_DAILY,</if>
		    <if test="eating != null" >EATING,</if>
		    <if test="supermarket != null" >SUPERMARKET,</if>
		    <if test="party != null" >PARTY,</if>
		    <if test="rent != null" >RENT,</if>
		    <if test="traffic != null" >TRAFFICEXP,</if>
		    <if test="elseCost != null" >ELSECOST,</if>
		    <if test="remark != null" >REMARK,</if>
		    <if test="clothes != null" >CLOTHES,</if>
		    <if test="book != null" >BOOK</if>
	  </trim>
	  <trim prefix="values (" suffix=")" suffixOverrides="," >
     			 #{id,jdbcType=DECIMAL},
	    				to_date(#{times},'yyyy-mm-dd'),#{holderName},
     		<if test="incomeTotal != null" >#{incomeTotal},</if>
		    <if test="profit != null" >		#{profit},</if>
		    <if test="costDaily != null" >  #{costDaily},</if>
		    <if test="eating != null" >     #{eating},</if>
		    <if test="supermarket != null" >#{supermarket},</if>
		    <if test="party != null" >      #{party},</if>
		    <if test="rent != null" >       #{rent},</if>
		    <if test="traffic != null" >    #{traffic},</if>
		    <if test="elseCost != null" >   #{elseCost},</if>
		    <if test="remark != null" >     #{remark},</if>
		    <if test="clothes != null" >    #{clothes},</if>
		    <if test="book != null" >       #{book}</if>
     </trim> 
	</insert>  -->
	
    
</mapper>